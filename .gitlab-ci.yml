stages:
  # - plan foundation
  # - apply foundation
  # - plan kubernetes
  # - apply kubernetes
  # - aad pod identity setup
  - install app gateway ingress controller
  # - apocalypse

image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest

variables:
  TF_PASSWORD: ${GITLAB_TOKEN}

# .plan:
#   script:
#     - cd ${TF_ROOT}
#     - gitlab-terraform init
#     - gitlab-terraform plan
#     - gitlab-terraform plan-json
#   artifacts:
#     name: plan
#     paths:
#       - ${TF_ROOT}/plan.cache
#     reports:
#       terraform: ${TF_ROOT}/plan.json

# .apply:
#   script:
#     - export | grep TF_
#     - cd ${TF_ROOT}
#     - gitlab-terraform init
#     - time gitlab-terraform apply
#   artifacts:
#     name: plan
#   only:
#     - main

# plan foundation:
#   extends: .plan
#   stage: plan foundation
#   resource_group: foundation
#   variables:
#     TF_ROOT: ${CI_PROJECT_DIR}/azure/foundation
#     TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-foundation
#     TF_VAR_azure_subscription: $AZURE_SUBSCRIPTION_PRO

# apply foundation:
#   extends: .apply
#   stage: apply foundation
#   resource_group: foundation
#   variables:
#     TF_ROOT: ${CI_PROJECT_DIR}/azure/foundation
#     TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-foundation
#     TF_VAR_azure_subscription: $AZURE_SUBSCRIPTION_PRO
#   dependencies:
#     - plan foundation

# plan kubernetes:
#   extends: .plan
#   stage: plan kubernetes
#   resource_group: kubernetes
#   variables:
#     TF_ROOT: ${CI_PROJECT_DIR}/azure/kubernetes
#     TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-kubernetes
#     TF_VAR_azure_subscription: $AZURE_SUBSCRIPTION_ENTERPRISE_1
#     TF_VAR_foundation_state_address: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-foundation

# apply kubernetes:
#   extends: .apply
#   stage: apply kubernetes
#   resource_group: kubernetes
#   variables:
#     TF_ROOT: ${CI_PROJECT_DIR}/azure/kubernetes
#     TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-kubernetes
#     TF_VAR_azure_subscription: $AZURE_SUBSCRIPTION_ENTERPRISE_1
#     TF_VAR_foundation_state_address: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-foundation
#   dependencies:
#     - plan kubernetes

# aad pod identity setup:
#   image: microsoft/azure-cli:latest
#   stage: aad pod identity setup
#   resource_group: post kubernetes setup
#   script:
#     - set -x
#     - echo "Installing kubectl..."
#     - az aks install-cli
#     - ${CI_PROJECT_DIR}/scripts/install-aad-pod-identity.sh

install app gateway ingress controller:
  stage: install app gateway ingress controller
  resource_group: post kubernetes setup
  variables:
    TF_ROOT: ${CI_PROJECT_DIR}/azure/kubernetes
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-kubernetes
    TF_VAR_azure_subscription: $AZURE_SUBSCRIPTION_ENTERPRISE_1
    TF_VAR_foundation_state_address: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-foundation
  script:
    - apk add bash curl jq
    - gitlab-terraform init
    - SUBSCRIPTION_ID="$(terraform output -json | jq '.app_gateway_ingress_controller_info.value.subscriptionId' -r)"
    - RESOURCE_GROUP="$(terraform output -json | jq '.app_gateway_ingress_controller_info.value.resource_group' -r)"
    - APP_GATEWAY_NAME="$(terraform output -json | jq '.app_gateway_ingress_controller_info.value.app_gateway_name' -r)"
    # azurerm_user_assigned_identity.testIdentity.id
    - IDENTITY_RESOURCE_ID="$(terraform output -json | jq '.app_gateway_ingress_controller_info.value.identity_resource_id' -r)"
    # azurerm_user_assigned_identity.testIdentity.client_id
    - IDENTITY_CLIENT_ID="$(terraform output -json | jq '.app_gateway_ingress_controller_info.value.identity_client_id' -r)"
    - export # Debugging
    - ${CI_PROJECT_DIR}/scripts/install-alpine-helm-3.sh
  
# tear down the cluster:
#   stage: apocalypse
#   resource_group: kubernetes
#   when: manual
#   variables:
#     TF_ROOT: ${CI_PROJECT_DIR}/azure/kubernetes
#     TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-kubernetes
#     TF_VAR_azure_subscription: $AZURE_SUBSCRIPTION_ENTERPRISE_1
#     TF_VAR_foundation_state_address: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/azure-foundation
#   script:
#     - cd ${TF_ROOT}
#     - gitlab-terraform init
#     - time terraform destroy -auto-approve
